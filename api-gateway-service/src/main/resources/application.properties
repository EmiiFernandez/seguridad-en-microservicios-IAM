# Configuración del puerto del servidor
server.port=9090

# Configuración de seguridad OAuth2 con Keycloak
spring.security.oauth2.client.provider.api-gateway-service.issuer-uri=http://localhost:8080/realms/springboot-keycloak
# Nombre del proveedor de OAuth2, en este caso, Keycloak
spring.security.oauth2.client.registration.api-gateway-service.provider=api-gateway-service
# ID del cliente en Keycloak
spring.security.oauth2.client.registration.api-gateway-service.client-id=api-gateway-client
# Secreto del cliente en Keycloak, se obtiene de las credenciales en Keycloak (nunca se comparte)
spring.security.oauth2.client.registration.api-gateway-service.client-secret=Zq7cbtCzwvyPUA4SqMCQT1vYQnyeOQse
# Ámbito (scope) de autorización
spring.security.oauth2.client.registration.api-gateway-service.scope=openid
# Tipo de concesión de autorización (en este caso, authorization_code)
spring.security.oauth2.client.registration.api-gateway-service.authorization-grant-type=authorization_code
# URI de redirección para recibir la respuesta de autorización de Keycloak
spring.security.oauth2.client.registration.api-gateway-service.redirect-uri=http://localhost:9090/login/oauth2/code/keycloak

# Configuración de filtros para Spring Cloud Gateway
spring.cloud.gateway.default-filters[0]=TokenRelay
# Definición de una ruta en Spring Cloud Gateway
spring.cloud.gateway.routes[0].id=test-service
# URI de destino para la ruta
spring.cloud.gateway.routes[0].uri=http://localhost:8081
# Predicado para la ruta (en este caso, se activa cuando la ruta comienza con /api/)
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/**